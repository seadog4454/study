GAS LISTING boot.s 			page 1


   1              	.code16
   2              	.text
   3              	.global _start
   4              	
   5              	
   6              	
   7              	_start:
   8 0000 EB56     	  jmp ipl
   9              	
  10              	  # BPB
  11              	  
  12 0002 90909090 	  .org 90 - (. - _start), 0x90
  12      90909090 
  12      90909090 
  12      90909090 
  12      90909090 
  13              	
  14              	  # IPL
  15              	 ipl:
  16 0058 FA       	  cli
  17 0059 B80000   	  mov $0x0000, %ax
  18 005c 89C2     	  mov %ax, %dx
  19 005e 8EC0     	  mov %ax, %es
  20 0060 8ED0     	  mov %ax, %ss
  21 0062 8B260000 	  mov (BOOT_LOAD), %sp
  22 0066 FB       	  sti
  23 0067 88160000 	  mov %dl, drive
  24              	  
  25              	
  26              	  # push $0x41
  27              	  # call putc
  28              	  # add $2, %sp
  29              	  
  30              	  
  31 006b 680000   	  push $s0
  32 006e E80B00   	  call puts
  33 0071 83C402   	  add $2, %sp
  34              	
  35              	/*
  36              	  push $0b0000
  37              	  push $10
  38              	  push $8
  39              	  push $s1
  40              	  pushw $15
  41              	  call itoa
  42              	
  43              	  push $s1
  44              	  call puts  
  45              	*/
  46              	
  47 0074 E8A500   	  call reboot
  48 0077 83C402   	  add $2, %sp
  49 007a EBFE     	  jmp .
  50              	
  51              	
  52              	#.include "../modules/real/putc.s"
  53              	.include "../modules/real/puts.s"
GAS LISTING boot.s 			page 2


   1              	.code16
   2              	
   3              	puts:
   4 007c 55       	  push %bp
   5 007d 89E5     	  mov %sp, %bp
   6              	
   7 007f 50       	  push %ax
   8 0080 53       	  push %bx
   9 0081 56       	  push %si #arg1: pointer of strings
  10              	
  11 0082 8B7604   	  mov 0x4(%bp), %si
  12              	
  13 0085 B40E     	  mov $0x0E, %ah # output one char
  14 0087 BB0000   	  mov $0x0000, %bx
  15 008a FC       	  cld # DF = 0
  16              	
  17              	  
  18              	/*
  19              	for(i=0, AL != null; AL++){
  20              	  int 0x10 # put AL
  21              	}
  22              	*/
  23              	
  24              	
  25              	.loop1:
  26 008b AC       	  lodsb # AL = *SI++
  27 008c 3C00     	  cmp $0, %al
  28 008e 7404     	  je .L1
  29              	  
  30 0090 CD10     	  int $0x10
  31 0092 EBF7     	  jmp .loop1
  32              	
  33              	.L1:
  34              	
  35 0094 5E       	  pop %si
  36 0095 5B       	  pop %bx
  37 0096 58       	  pop %ax
  38              	
  39 0097 89EC     	  mov %bp, %sp
  40 0099 5D       	  pop %bp
  41              	
  42 009a C3       	  ret
  43              	 
  54              	.include "../modules/real/itoa.s"
   1              	.code16
   2              	
   3              	# void itoa(num, buff, size, radix, flag)
   4              	# num:source addr
   5              	# buff:dist addr
   6              	# radix:set 2, 8, 10, or 16 
   7              	# flag:When set 
   8              	#                 1st bit: 0 padding on space
   9              	#                 2nd bit: add +/- sign
  10              	#                 3rd bit: treat as signed variable 
  11              	
  12              	
  13              	itoa:
GAS LISTING boot.s 			page 3


  14 009b 55       	  push %bp
  15 009c 89E5     	  mov %sp, %bp
  16              	
  17              	# store register
  18 009e 50       	  push %ax
  19 009f 53       	  push %bx
  20 00a0 51       	  push %cx
  21 00a1 52       	  push %dx
  22 00a2 56       	  push %si
  23 00a3 57       	  push %di
  24              	
  25              	# get arguments
  26 00a4 8B4604   	  mov 0x4(%bp), %ax # num
  27 00a7 8B7606   	  mov 0x6(%bp), %si # buff
  28 00aa 8B4E08   	  mov 0x8(%bp), %cx # size
  29 00ad 8B5E0C   	  mov 0xc(%bp), %bx # flag
  30              	# The remaining arguments(radix: 0xa(%bp) ) will be assigend later.
  31 00b0 89F7     	  mov %si, %di
  32 00b2 01CF     	  add %cx, %di
  33 00b4 4F       	  dec %di
  34              	
  35              	
  36              	
  37              	# detect signed variable
  38 00b5 F7C30100 	  test $0b0001, %bx
  39 00b9 7408     	  jz .Litoa1
  40 00bb 83F800   	  cmp $0, %ax
  41 00be 7D03     	  jge .Litoa2
  42 00c0 83CB02   	  or $0b0010, %bx
  43              	.Litoa1: 
  44              	.Litoa2:
  45              	
  46              	# detect add +/- sign
  47 00c3 F7C30200 	  test $0b0010, %bx
  48 00c7 7410     	  jz .Litoa3
  49 00c9 83F800   	  cmp $0, %ax
  50 00cc 7D07     	  jge .Litoa4
  51 00ce F7D8     	  neg %ax
  52 00d0 C6042D   	  movb $0x2d, (%si) # 0x2d == '-'
  53 00d3 EB03     	  jmp .Litoa5
  54              	.Litoa4:
  55 00d5 C6042B   	  movb $0x2b, (%si) # 0x2b == '+'
  56              	.Litoa5:
  57 00d8 49       	  dec %cx
  58              	.Litoa3:
  59              	
  60              	# convert to ascii
  61 00d9 8B5E0A   	  mov 0xa(%bp), %bx
  62              	.LitoaLOOP1:
  63 00dc BA0000   	  mov $0, %dx
  64 00df F7F3     	  div %bx
  65 00e1 89D6     	  mov %dx, %si
  66 00e3 8A940000 	  movb ascii_table(%si), %dl
  67 00e7 8815     	  mov %dl, (%di)
  68 00e9 4F       	  dec %di
  69 00ea 83F800   	  cmp $0, %ax
  70 00ed E0ED     	  loopnz .LitoaLOOP1
GAS LISTING boot.s 			page 4


  71              	.LotpaLOOPEND1:
  72              	
  73              	
  74              	# 0 padding in the space
  75 00ef 83F900   	  cmp $0, %cx
  76 00f2 740D     	  je .Litoa6
  77 00f4 B020     	  mov $0x20, %al
  78 00f6 837E0C04 	  cmp $0b0100, 0xc(%bp)
  79 00fa 7502     	  jne .Litoa7
  80 00fc B030     	  mov $0x30, %al
  81              	.Litoa7:
  82 00fe FD       	  std
  83 00ff F3AA     	  rep stosb
  84              	.Litoa6:
  85              	
  86              	# return register
  87 0101 5F       	  pop %di
  88 0102 5E       	  pop %si
  89 0103 5A       	  pop %dx
  90 0104 59       	  pop %cx
  91 0105 5B       	  pop %bx
  92 0106 58       	  pop %ax
  93              	
  94              	# destroy stack frame
  95 0107 89EC     	  mov %bp, %sp
  96 0109 5D       	  pop %bp
  97 010a C3       	  ret
  98              	
  99              	
 100              	
 101 010b 30313233 	ascii_table: .string "0123456789ABCDEF"
 101      34353637 
 101      38394142 
 101      43444546 
 101      00
  55              	.include "../modules/real/reboot.s"
   1              	reboot:
   2 011c 680000   		push $s_reboot_signal
   3 011f E85AFF   		call puts
   4 0122 83C402   		add $0x2, %sp
   5              	
   6              	.Lreboot1:
   7 0125 B410     		mov $0x10, %ah # wait input key
   8 0127 CD16     		int $0x16 # bios call: input key
   9              	
  10 0129 3C20     		cmp $0x20, %al
  11 012b 75F8     		jne .Lreboot1
  12              	
  13              		
  14 012d 680000   		push $s_reboot_newline
  15 0130 E849FF   		call puts
  16 0133 83C402   		add $0x2, %sp
  17              	
  18 0136 CD19     		int $0x19 # bios call: reboot
  19              	
  20              	
  21 0138 50757368 	s_reboot_signal: .string "Push SPACE key to reboot...\r\n"
GAS LISTING boot.s 			page 5


  21      20535041 
  21      4345206B 
  21      65792074 
  21      6F207265 
  22 0156 0D0A0D0A 	s_reboot_newline: .string "\r\n\r\n"
  22      00
  23              	
  24              	
  56              	
  57 015b 90       	.align 2
  58              	 BOOT:
  59              	
  60              	
  61              	.data
  62 0000 BB       	  drive: .byte 0xBB
  63 0001 007C     	  BOOT_LOAD: .word 0x7C00
  64 0003 426F6F74 	  s0: .string "Booting..."
  64      696E672E 
  64      2E2E00
  65 000e 2D2D2D2D 	  s1: .string "--------"
  65      2D2D2D2D 
  65      00
GAS LISTING boot.s 			page 6


DEFINED SYMBOLS
              boot.s:7      .text:0000000000000000 _start
              boot.s:15     .text:0000000000000058 ipl
              boot.s:63     .data:0000000000000001 BOOT_LOAD
              boot.s:62     .data:0000000000000000 drive
              boot.s:64     .data:0000000000000003 s0
../modules/real/puts.s:3      .text:000000000000007c puts
../modules/real/reboot.s:1      .text:000000000000011c reboot
../modules/real/puts.s:25     .text:000000000000008b .loop1
../modules/real/itoa.s:13     .text:000000000000009b itoa
../modules/real/itoa.s:101    .text:000000000000010b ascii_table
../modules/real/reboot.s:21     .text:0000000000000138 s_reboot_signal
../modules/real/reboot.s:22     .text:0000000000000156 s_reboot_newline
              boot.s:58     .text:000000000000015c BOOT
              boot.s:65     .data:000000000000000e s1

NO UNDEFINED SYMBOLS
